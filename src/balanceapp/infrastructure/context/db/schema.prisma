generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin"]
  // output = "./generated/prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean @default(false)

  name String
  email String @unique
  password String
  incomes Income[]
  expenses Expense[]
  categories Category[]
  tokens Token[]
}

model Token {
  id String @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean @default(false)

  token String
  ttl Int
  userId String
  user User @relation(fields: [userId], references: [id])
}

model Category {
  id String @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean @default(false)

  name String
  userId String
  user User @relation(fields: [userId], references: [id])
  incomes Income[]
  expenses Expense[]
}

model Income {
  id String @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean @default(false)

  name String
  amount Int
  categoryId String
  category Category @relation(fields: [categoryId], references: [id])
  userId String
  user User @relation(fields: [userId], references: [id])
}

model Expense {
  id String @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean @default(false)

  name String
  amount Int
  categoryId String
  category Category @relation(fields: [categoryId], references: [id])
  userId String
  user User @relation(fields: [userId], references: [id])
}